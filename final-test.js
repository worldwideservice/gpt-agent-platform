const { chromium } = require('playwright');

async function finalTest() {
  console.log('üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–†–û–î–ê–ö–®–ï–ù–ê - –ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê');

  const browser = await chromium.launch({ headless: true });
  const page = await browser.newPage();

  const baseUrl = 'https://gpt-agent-kwid-bxw0a8dht-world-wide-services-62780b79.vercel.app';
  let testResults = { passed: 0, failed: 0, tests: [] };

  const addResult = (description, passed, details = '') => {
    if (passed) {
      testResults.passed++;
      testResults.tests.push(`‚úÖ ${description}${details ? ': ' + details : ''}`);
    } else {
      testResults.failed++;
      testResults.tests.push(`‚ùå ${description}${details ? ': ' + details : ''}`);
    }
  };

  try {
    // === –¢–ï–°–¢ 1: –î–û–°–¢–£–ü –ö –°–¢–†–ê–ù–ò–¶–ê–ú ===
    console.log('\nüè† –¢–ï–°–¢ 1: –î–û–°–¢–£–ü –ö –°–¢–†–ê–ù–ò–¶–ê–ú');
    await page.goto(baseUrl, { waitUntil: 'domcontentloaded' });
    addResult('–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è', (await page.title()).includes('GPT Agent'));

    await page.goto(`${baseUrl}/login`, { waitUntil: 'domcontentloaded' });
    addResult('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞', (await page.title()).includes('–í—Ö–æ–¥'));

    await page.goto(`${baseUrl}/register`, { waitUntil: 'domcontentloaded' });
    addResult('–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–∞', (await page.title()).includes('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'));

    // === –¢–ï–°–¢ 2: –ó–ê–©–ò–¢–ê –ú–ê–†–®–†–£–¢–û–í ===
    console.log('\nüîí –¢–ï–°–¢ 2: –ó–ê–©–ò–¢–ê –ú–ê–†–®–†–£–¢–û–í');
    await page.goto(`${baseUrl}/agents`, { waitUntil: 'domcontentloaded' });
    addResult('–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ /agents –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è', page.url().includes('/login'));

    await page.goto(`${baseUrl}/account`, { waitUntil: 'domcontentloaded' });
    addResult('–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ /account –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è', page.url().includes('/login'));

    // === –¢–ï–°–¢ 3: –í–•–û–î –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê ===
    console.log('\nüëë –¢–ï–°–¢ 3: –í–•–û–î –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê');
    await page.goto(`${baseUrl}/login`, { waitUntil: 'domcontentloaded' });
    await page.fill('#email', 'admin@worldwideservice.eu');
    await page.fill('#password', 'l1tmw6u977c9!Q');
    await page.click('button[type="submit"]');

    // –ñ–¥–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    await page.waitForTimeout(3000);
    const adminUrl = page.url();

    const adminLoggedIn = !adminUrl.includes('/login') && !adminUrl.includes('/register');
    addResult('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—Ö–æ–¥–∏—Ç –≤ —Å–∏—Å—Ç–µ–º—É', adminLoggedIn, `URL: ${adminUrl}`);

    if (adminLoggedIn) {
      // === –¢–ï–°–¢ 4: –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê –ü–õ–ê–¢–§–û–†–ú–£ ===
      console.log('\nüè¢ –¢–ï–°–¢ 4: –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê –ü–õ–ê–¢–§–û–†–ú–£');

      // –ï—Å–ª–∏ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞ /agents, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
      if (!adminUrl.includes('/agents')) {
        console.log('–ê–¥–º–∏–Ω –Ω–µ –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ /agents, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä—É—á–Ω–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...');
        await page.goto(`${baseUrl}/agents`, { waitUntil: 'domcontentloaded' });
        await page.waitForTimeout(2000);
        const agentsUrl = page.url();
        addResult('–†—É—á–Ω–æ–π –¥–æ—Å—Ç—É–ø –∫ /agents —Ä–∞–±–æ—Ç–∞–µ—Ç', agentsUrl.includes('/agents'));

        // –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç –ª–∏ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        await page.goto(baseUrl, { waitUntil: 'domcontentloaded' });
        await page.waitForTimeout(2000);
        const homeRedirectUrl = page.url();
        addResult('–ì–ª–∞–≤–Ω–∞—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', homeRedirectUrl.includes('/agents'), `URL: ${homeRedirectUrl}`);
      } else {
        addResult('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É —Ä–∞–±–æ—Ç–∞–µ—Ç', adminUrl.includes('/agents'));
      }

      // === –¢–ï–°–¢ 5: –ö–û–ù–¢–ï–ù–¢ –ü–õ–ê–¢–§–û–†–ú–´ ===
      console.log('\nü§ñ –¢–ï–°–¢ 5: –ö–û–ù–¢–ï–ù–¢ –ü–õ–ê–¢–§–û–†–ú–´');
      await page.goto(`${baseUrl}/agents`, { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(2000);

      const pageTitle = await page.title();
      addResult('–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≥–µ–Ω—Ç–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π', pageTitle.includes('–ê–≥–µ–Ω—Ç—ã –ò–ò'));

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–º–æ-–∞–≥–µ–Ω—Ç–æ–≤ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã –¥–ª—è –∞–¥–º–∏–Ω–∞)
      const agent1 = await page.locator('text=–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞').isVisible().catch(() => false);
      const agent2 = await page.locator('text=–ü—Ä–æ–¥–∞–∂–∏').isVisible().catch(() => false);
      addResult('–î–µ–º–æ-–∞–≥–µ–Ω—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è', agent1 && agent2);

      // === –¢–ï–°–¢ 6: –î–û–°–¢–£–ü –ö –î–†–£–ì–ò–ú –°–¢–†–ê–ù–ò–¶–ê–ú ===
      console.log('\nüîë –¢–ï–°–¢ 6: –î–û–°–¢–£–ü –ö –î–†–£–ì–ò–ú –°–¢–†–ê–ù–ò–¶–ê–ú –ü–õ–ê–¢–§–û–†–ú–´');
      await page.goto(`${baseUrl}/account`, { waitUntil: 'domcontentloaded' });
      addResult('–î–æ—Å—Ç—É–ø –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–∫–∫–∞—É–Ω—Ç–∞', page.url().includes('/account'));

      // === –¢–ï–°–¢ 7: –ü–û–í–¢–û–†–ù–´–ô –í–•–û–î ===
      console.log('\nüîÑ –¢–ï–°–¢ 7: –ü–û–í–¢–û–†–ù–´–ô –í–•–û–î (–ü–†–û–í–ï–†–ö–ê –°–ï–°–°–ò–ò)');
      await page.goto(`${baseUrl}/login`, { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(2000);
      const loginRedirectUrl = page.url();
      addResult('–ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥ –Ω–∞ /login –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É', loginRedirectUrl.includes('/agents'), `URL: ${loginRedirectUrl}`);
    }

    // === –¢–ï–°–¢ 8: –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===
    console.log('\nüìù –¢–ï–°–¢ 8: –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø');
    const testEmail = `final-test-${Date.now()}@example.com`;

    await page.goto(`${baseUrl}/register`, { waitUntil: 'domcontentloaded' });
    await page.fill('#firstName', 'Final');
    await page.fill('#lastName', 'Test');
    await page.fill('#email', testEmail);
    await page.fill('#password', 'FinalTest123!');
    await page.fill('#confirmPassword', 'FinalTest123!');
    await page.click('button[type="submit"]');

    // –ñ–¥–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –ª–æ–≥–∏–Ω
    await page.waitForTimeout(3000);
    const postRegisterUrl = page.url();
    addResult('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –ª–æ–≥–∏–Ω', postRegisterUrl.includes('/login'));

    if (postRegisterUrl.includes('/login')) {
      // –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏
      await page.fill('#email', testEmail);
      await page.fill('#password', 'FinalTest123!');
      await page.click('button[type="submit"]');

      await page.waitForTimeout(3000);
      const postNewLoginUrl = page.url();
      const newUserLoggedIn = !postNewLoginUrl.includes('/login') && !postNewLoginUrl.includes('/register');
      addResult('–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏', newUserLoggedIn, `URL: ${postNewLoginUrl}`);

      if (newUserLoggedIn) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
        const newUserOnPlatform = postNewLoginUrl.includes('/agents') || postNewLoginUrl.includes('/account');
        addResult('–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–∞–¥–∞–µ—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É', newUserOnPlatform);
      }
    }

  } catch (error) {
    addResult('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', false, error.message);
  } finally {
    await browser.close();
  }

  // –†–ï–ó–£–õ–¨–¢–ê–¢–´
  console.log('\n' + '='.repeat(60));
  console.log('üìä –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø');
  console.log('=' .repeat(60));
  console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${testResults.passed}`);
  console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${testResults.failed}`);
  console.log(`üìà –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${((testResults.passed / (testResults.passed + testResults.failed)) * 100).toFixed(1)}%`);

  console.log('\nüìã –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  testResults.tests.forEach(test => console.log(test));

  if (testResults.failed === 0) {
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ü–†–û–î–ê–ö–®–ï–ù –ì–û–¢–û–í!');
    console.log('üöÄ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ú–û–ñ–ï–¢ –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –ü–õ–ê–¢–§–û–†–ú–£!');
  } else {
    console.log('\n‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´! –ù–£–ñ–ù–û –ò–°–ü–†–ê–í–ò–¢–¨!');
    console.log('üîß –û–°–ù–û–í–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:');
    if (testResults.tests.some(t => t.includes('–ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'))) {
      console.log('  - –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }
    if (testResults.tests.some(t => t.includes('–¥–µ–º–æ-–∞–≥–µ–Ω—Ç—ã'))) {
      console.log('  - –î–µ–º–æ-–∞–≥–µ–Ω—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è');
    }
  }

  return testResults.failed === 0;
}

finalTest().catch(console.error);