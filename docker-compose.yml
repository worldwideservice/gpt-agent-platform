version: '3.8'

services:
  # Основное Next.js приложение
  app:
    build: .
    container_name: gpt-agent-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.local
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis для очередей задач
  redis:
    image: redis:7-alpine
    container_name: gpt-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API Service
  # Примечание: Запускайте отдельно через npm run dev в services/api
  # или создайте Dockerfile для продакшена
  # api:
  #   build:
  #     context: .
  #     dockerfile: services/api/Dockerfile
  #   ports:
  #     - "4000:4000"
  #   env_file:
  #     - services/api/.env
  #   depends_on:
  #     - redis
  #   restart: unless-stopped

  # Worker Service
  # Примечание: Запускайте отдельно через npm run dev в services/worker
  # или создайте Dockerfile для продакшена
  # worker:
  #   build:
  #     context: .
  #     dockerfile: services/worker/Dockerfile
  #   env_file:
  #     - services/worker/.env
  #   depends_on:
  #     - redis
  #   restart: unless-stopped

volumes:
  redis-data:

networks:
  default:
    name: gpt-agent-network

