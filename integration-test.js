const { chromium } = require('playwright');

async function integrationTest() {
  console.log('­ЪћЌ лўлЮлблЋлЊлалљлдлўлълЮлЮлФлЎ лблЋлАлб - лЪлалълњлЋлалџлљ лњлАлЋлЊлъ лЪлълблълџлљ лА лАлЋлАлАлўл»люлў');

  const browser = await chromium.launch({ headless: true });
  const page = await browser.newPage();

  const baseUrl = 'https://gpt-agent-kwid-bxw0a8dht-world-wide-services-62780b79.vercel.app';
  let testResults = { passed: 0, failed: 0, tests: [] };

  const addResult = (description, passed, details = '') => {
    if (passed) {
      testResults.passed++;
      testResults.tests.push(`РюЁ ${description}${details ? ': ' + details : ''}`);
    } else {
      testResults.failed++;
      testResults.tests.push(`РЮї ${description}${details ? ': ' + details : ''}`);
    }
  };

  try {
    // === лблЋлАлб 1: лћлълАлблБлЪ лџ лАлблалљлЮлўлдлљлю ===
    console.log('\n­ЪЈа лблЋлАлб 1: лћлълАлблБлЪ лџ лълАлЮлълњлЮлФлю лАлблалљлЮлўлдлљлю');
    await page.goto(baseUrl, { waitUntil: 'domcontentloaded', timeout: 30000 });
    addResult('лЊл╗л░л▓лйл░ЛЈ ЛЂЛѓЛђл░лйлИЛєл░ лил░л│ЛђЛЃлХл░лхЛѓЛЂЛЈ', (await page.title()).includes('GPT Agent'));

    await page.goto(`${baseUrl}/login`, { waitUntil: 'domcontentloaded' });
    addResult('лАЛѓЛђл░лйлИЛєл░ л╗лЙл│лИлйл░ л┤лЙЛЂЛѓЛЃл┐лйл░', (await page.title()).includes('лњЛЁлЙл┤'));

    await page.goto(`${baseUrl}/register`, { waitUntil: 'domcontentloaded' });
    addResult('лАЛѓЛђл░лйлИЛєл░ Лђлхл│лИЛЂЛѓЛђл░ЛєлИлИ л┤лЙЛЂЛѓЛЃл┐лйл░', (await page.title()).includes('лалхл│лИЛЂЛѓЛђл░ЛєлИЛЈ'));

    // === лблЋлАлб 2: лЌлљлЕлўлблљ люлљлалелалБлблълњ ===
    console.log('\n­Ъћњ лблЋлАлб 2: лЌлљлЕлўлблљ люлљлалелалБлблълњ');
    await page.goto(`${baseUrl}/agents`, { waitUntil: 'domcontentloaded' });
    addResult('лЮлхл░л▓ЛѓлЙЛђлИлилЙл▓л░лйлйЛІл╣ л┤лЙЛЂЛѓЛЃл┐ л║ /agents л▒л╗лЙл║лИЛђЛЃлхЛѓЛЂЛЈ', page.url().includes('/login'));

    await page.goto(`${baseUrl}/account`, { waitUntil: 'domcontentloaded' });
    addResult('лЮлхл░л▓ЛѓлЙЛђлИлилЙл▓л░лйлйЛІл╣ л┤лЙЛЂЛѓЛЃл┐ л║ /account л▒л╗лЙл║лИЛђЛЃлхЛѓЛЂЛЈ', page.url().includes('/login'));

    // === лблЋлАлб 3: лњлЦлълћ лљлћлюлўлЮлўлАлблалљлблълалљ ===
    console.log('\n­ЪЉЉ лблЋлАлб 3: лњлЦлълћ лљлћлюлўлЮлўлАлблалљлблълалљ');
    await page.goto(`${baseUrl}/login`, { waitUntil: 'domcontentloaded' });
    await page.fill('#email', 'admin@worldwideservice.eu');
    await page.fill('#password', 'l1tmw6u977c9!Q');
    await page.click('button[type="submit"]');

    console.log('лќл┤лхл╝ л▓ЛЁлЙл┤л░ лИ л┐лхЛђлхлйл░л┐Лђл░л▓л╗лхлйлИЛЈ...');
    await page.waitForTimeout(5000);

    const afterLoginUrl = page.url();
    console.log('URL л┐лЙЛЂл╗лх л▓ЛЁлЙл┤л░:', afterLoginUrl);

    const adminLoggedIn = !afterLoginUrl.includes('/login') && !afterLoginUrl.includes('/register');
    addResult('лљл┤л╝лИлйлИЛЂЛѓЛђл░ЛѓлЙЛђ л▓ЛЁлЙл┤лИЛѓ л▓ ЛЂлИЛЂЛѓлхл╝ЛЃ', adminLoggedIn);

    if (adminLoggedIn) {
      const isOnPlatform = afterLoginUrl.includes('/agents') || afterLoginUrl.includes('/account');
      addResult('лљл┤л╝лИлйлИЛЂЛѓЛђл░ЛѓлЙЛђ л┐лхЛђлхлйл░л┐Лђл░л▓л╗ЛЈлхЛѓЛЂЛЈ лйл░ л┐л╗л░ЛѓЛёлЙЛђл╝ЛЃ', isOnPlatform, `URL: ${afterLoginUrl}`);

      // === лблЋлАлб 4: лћлълАлблБлЪ лџ лЪлЏлљлблцлълалюлЋ ===
      console.log('\n­ЪЈб лблЋлАлб 4: лћлълАлблБлЪ лџ лЪлЏлљлблцлълалюлЋ');
      await page.goto(`${baseUrl}/agents`, { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(2000);
      const agentsUrl = page.url();
      addResult('лћлЙЛЂЛѓЛЃл┐ л║ ЛЂЛѓЛђл░лйлИЛєлх л░л│лхлйЛѓлЙл▓', agentsUrl.includes('/agents'));

      await page.goto(`${baseUrl}/account`, { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(2000);
      const accountUrl = page.url();
      addResult('лћлЙЛЂЛѓЛЃл┐ л║ ЛЂЛѓЛђл░лйлИЛєлх л░л║л║л░ЛЃлйЛѓл░', accountUrl.includes('/account'));

      // === лблЋлАлб 5: лЪлЋлалЋлЮлљлЪлалљлњлЏлЋлЮлўлЋ лљлњлблълалўлЌлълњлљлЮлЮлълЊлъ лЪлълЏлглЌлълњлљлблЋлЏл» ===
      console.log('\n­Ъћё лблЋлАлб 5: лЪлЋлалЋлЮлљлЪлалљлњлЏлЋлЮлўлЋ лљлњлблълалўлЌлълњлљлЮлЮлълЊлъ лЪлълЏлглЌлълњлљлблЋлЏл»');

      // лЊл╗л░л▓лйл░ЛЈ ЛЂЛѓЛђл░лйлИЛєл░
      await page.goto(baseUrl, { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(3000);
      const homeRedirectUrl = page.url();
      addResult('лЊл╗л░л▓лйл░ЛЈ л┐лхЛђлхлйл░л┐Лђл░л▓л╗ЛЈлхЛѓ л░л▓ЛѓлЙЛђлИлилЙл▓л░лйлйлЙл│лЙ л┐лЙл╗ЛїлилЙл▓л░Лѓлхл╗ЛЈ', homeRedirectUrl.includes('/agents'), `URL: ${homeRedirectUrl}`);

      // лАЛѓЛђл░лйлИЛєл░ л╗лЙл│лИлйл░
      await page.goto(`${baseUrl}/login`, { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(3000);
      const loginRedirectUrl = page.url();
      addResult('лЏлЙл│лИлй л┐лхЛђлхлйл░л┐Лђл░л▓л╗ЛЈлхЛѓ л░л▓ЛѓлЙЛђлИлилЙл▓л░лйлйлЙл│лЙ л┐лЙл╗ЛїлилЙл▓л░Лѓлхл╗ЛЈ', loginRedirectUrl.includes('/agents'), `URL: ${loginRedirectUrl}`);

      // === лблЋлАлб 6: лџлълЮлблЋлЮлб лЪлЏлљлблцлълалюлФ ===
      console.log('\n­Ъцќ лблЋлАлб 6: лџлълЮлблЋлЮлб лЪлЏлљлблцлълалюлФ');
      await page.goto(`${baseUrl}/agents`, { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(2000);

      const pageTitle = await page.title();
      addResult('лЌл░л│лЙл╗лЙл▓лЙл║ ЛЂЛѓЛђл░лйлИЛєЛІ л░л│лхлйЛѓлЙл▓ л║лЙЛђЛђлхл║ЛѓлйЛІл╣', pageTitle.includes('лљл│лхлйЛѓЛІ лўлў'));

      // лЪЛђлЙл▓лхЛђЛЈлхл╝ л┤лхл╝лЙ-л░л│лхлйЛѓлЙл▓ (л┤лЙл╗лХлйЛІ л▒ЛІЛѓЛї л┤л╗ЛЈ л░л┤л╝лИлйл░)
      const agent1Visible = await page.locator('text=лблхЛЁлйлИЛЄлхЛЂл║л░ЛЈ л┐лЙл┤л┤лхЛђлХл║л░').isVisible().catch(() => false);
      const agent2Visible = await page.locator('text=лЪЛђлЙл┤л░лХлИ').isVisible().catch(() => false);
      addResult('лћлхл╝лЙ-л░л│лхлйЛѓЛІ лЙЛѓлЙл▒Лђл░лХл░ЛјЛѓЛЂЛЈ', agent1Visible && agent2Visible);

      // === лблЋлАлб 7: лалЋлЊлўлАлблалљлдлўл» лЮлълњлълЊлъ лЪлълЏлглЌлълњлљлблЋлЏл» ===
      console.log('\n­ЪЊЮ лблЋлАлб 7: лалЋлЊлўлАлблалљлдлўл» лЮлълњлълЊлъ лЪлълЏлглЌлълњлљлблЋлЏл»');

      // лАлйл░ЛЄл░л╗л░ л▓ЛІл╣л┤лхл╝ лИли ЛЂлИЛЂЛѓлхл╝ЛІ л░л┤л╝лИлйл░
      await page.goto(`${baseUrl}/api/auth/signout`, { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(2000);

      // лЪЛђлЙл▓лхЛђлИл╝, ЛЄЛѓлЙ л▓ЛІЛѕл╗лИ
      await page.goto(`${baseUrl}/agents`, { waitUntil: 'domcontentloaded' });
      const afterLogoutUrl = page.url();
      addResult('лњЛІЛЁлЙл┤ лИли ЛЂлИЛЂЛѓлхл╝ЛІ Лђл░л▒лЙЛѓл░лхЛѓ', afterLogoutUrl.includes('/login'));

      if (afterLogoutUrl.includes('/login')) {
        const timestamp = Date.now();
        const testEmail = `integration-${timestamp}@test.com`;
        const testPassword = 'IntegrationTest123!';

        // лалхл│лИЛЂЛѓЛђл░ЛєлИЛЈ
        await page.goto(`${baseUrl}/register`, { waitUntil: 'domcontentloaded' });
        await page.fill('#firstName', 'Integration');
        await page.fill('#lastName', 'Test');
        await page.fill('#email', testEmail);
        await page.fill('#password', testPassword);
        await page.fill('#confirmPassword', testPassword);
        await page.click('button[type="submit"]');

        await page.waitForTimeout(3000);
        const postRegisterUrl = page.url();
        addResult('лалхл│лИЛЂЛѓЛђл░ЛєлИЛЈ Лђл░л▒лЙЛѓл░лхЛѓ', postRegisterUrl.includes('/login'));

        // лњЛЁлЙл┤
        if (postRegisterUrl.includes('/login')) {
          await page.fill('#email', testEmail);
          await page.fill('#password', testPassword);
          await page.click('button[type="submit"]');

          await page.waitForTimeout(3000);
          const postNewLoginUrl = page.url();
          const newUserLoggedIn = !postNewLoginUrl.includes('/login') && !postNewLoginUrl.includes('/register');
          addResult('лЮлЙл▓ЛІл╣ л┐лЙл╗ЛїлилЙл▓л░Лѓлхл╗Лї л╝лЙлХлхЛѓ л▓лЙл╣ЛѓлИ', newUserLoggedIn);

          if (newUserLoggedIn) {
            const newUserOnPlatform = postNewLoginUrl.includes('/agents') || postNewLoginUrl.includes('/account');
            addResult('лЮлЙл▓ЛІл╣ л┐лЙл╗ЛїлилЙл▓л░Лѓлхл╗Лї л┐лЙл┐л░л┤л░лхЛѓ лйл░ л┐л╗л░ЛѓЛёлЙЛђл╝ЛЃ', newUserOnPlatform);
          }
        }
      }
    }

  } catch (error) {
    addResult('лџЛђлИЛѓлИЛЄлхЛЂл║л░ЛЈ лЙЛѕлИл▒л║л░', false, error.message);
  } finally {
    await browser.close();
  }

  // лалЋлЌлБлЏлглблљлблФ
  console.log('\n' + '='.repeat(60));
  console.log('­ЪЊі лцлўлЮлљлЏлглЮлФлЎ лълблДлЋлб лўлЮлблЋлЊлалљлдлўлълЮлЮлълЊлъ лблЋлАлблўлалълњлљлЮлўл»');
  console.log('=' .repeat(60));
  console.log(`РюЁ лЪЛђлЙл╣л┤лхлйлЙ: ${testResults.passed}`);
  console.log(`РЮї лЪЛђлЙл▓л░л╗лхлйлЙ: ${testResults.failed}`);
  console.log(`­ЪЊѕ лъл▒ЛЅлИл╣ ЛђлхлиЛЃл╗ЛїЛѓл░Лѓ: ${((testResults.passed / (testResults.passed + testResults.failed)) * 100).toFixed(1)}%`);

  console.log('\n­ЪЊІ лћлЋлблљлЏлглЮлФлЋ лалЋлЌлБлЏлглблљлблФ:');
  testResults.tests.forEach(test => console.log(test));

  const criticalTests = [
    'лљл┤л╝лИлйлИЛЂЛѓЛђл░ЛѓлЙЛђ л▓ЛЁлЙл┤лИЛѓ л▓ ЛЂлИЛЂЛѓлхл╝ЛЃ',
    'лљл┤л╝лИлйлИЛЂЛѓЛђл░ЛѓлЙЛђ л┐лхЛђлхлйл░л┐Лђл░л▓л╗ЛЈлхЛѓЛЂЛЈ лйл░ л┐л╗л░ЛѓЛёлЙЛђл╝ЛЃ',
    'лЊл╗л░л▓лйл░ЛЈ л┐лхЛђлхлйл░л┐Лђл░л▓л╗ЛЈлхЛѓ л░л▓ЛѓлЙЛђлИлилЙл▓л░лйлйлЙл│лЙ л┐лЙл╗ЛїлилЙл▓л░Лѓлхл╗ЛЈ',
    'лЏлЙл│лИлй л┐лхЛђлхлйл░л┐Лђл░л▓л╗ЛЈлхЛѓ л░л▓ЛѓлЙЛђлИлилЙл▓л░лйлйлЙл│лЙ л┐лЙл╗ЛїлилЙл▓л░Лѓлхл╗ЛЈ',
    'лалхл│лИЛЂЛѓЛђл░ЛєлИЛЈ Лђл░л▒лЙЛѓл░лхЛѓ',
    'лЮлЙл▓ЛІл╣ л┐лЙл╗ЛїлилЙл▓л░Лѓлхл╗Лї л╝лЙлХлхЛѓ л▓лЙл╣ЛѓлИ',
    'лЮлЙл▓ЛІл╣ л┐лЙл╗ЛїлилЙл▓л░Лѓлхл╗Лї л┐лЙл┐л░л┤л░лхЛѓ лйл░ л┐л╗л░ЛѓЛёлЙЛђл╝ЛЃ'
  ];

  const criticalPassed = testResults.tests.filter(t =>
    criticalTests.some(ct => t.includes(ct)) && t.startsWith('РюЁ')
  ).length;

  console.log(`\n­Ъј» лџлалўлблўлДлЋлАлџлўлЋ лблЋлАлблФ: ${criticalPassed}/${criticalTests.length}`);

  if (criticalPassed === criticalTests.length) {
    console.log('\n­ЪјЅ лњлАлЋ лџлалўлблўлДлЋлАлџлўлЋ лцлБлЮлџлдлўлў лалљлЉлълблљл«лб! лЪлалълћлљлџлелЋлЮ лЊлълблълњ!');
    console.log('­Ъџђ лЪлълЏлглЌлълњлљлблЋлЏлг люлълќлЋлб лЪлълЏлЮлълАлблгл« лўлАлЪлълЏлглЌлълњлљлблг лЪлЏлљлблцлълалюлБ!');
    console.log('­ЪћЌ лњлАлЋ лАлблалљлЮлўлдлФ лАлњл»лЌлљлЮлФ лЪлалљлњлўлЏлглЮлъ!');
  } else {
    console.log('\nРџа№ИЈ лЋлАлблг лЪлалълЉлЏлЋлюлФ лА лџлалўлблўлДлЋлАлџлўлюлў лцлБлЮлџлдлўл»люлў!');
    console.log('­ЪћД лЮлБлќлЮлъ лўлАлЪлалљлњлўлблг:');
    criticalTests.forEach(test => {
      if (!testResults.tests.some(t => t.includes(test) && t.startsWith('РюЁ'))) {
        console.log(`  - ${test}`);
      }
    });
  }

  return criticalPassed === criticalTests.length;
}

integrationTest().catch(console.error);
