const { chromium } = require('playwright');

async function testFullFlow() {
  console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–ù–û–ì–û –ü–û–¢–û–ö–ê: –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø ‚Üí –í–•–û–î ‚Üí –ü–õ–ê–¢–§–û–†–ú–ê');

  const browser = await chromium.launch({ headless: true });
  const page = await browser.newPage();

  const baseUrl = 'https://gpt-agent-kwid-bxw0a8dht-world-wide-services-62780b79.vercel.app';

  try {
    // 1. –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
    console.log('\nüìù –®–ê–ì 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    const timestamp = Date.now();
    const testEmail = `flow-${timestamp}@test.com`;
    const testPassword = 'FlowTest123!';

    await page.goto(`${baseUrl}/register`, { waitUntil: 'domcontentloaded' });
    await page.fill('#firstName', 'Flow');
    await page.fill('#lastName', 'Test');
    await page.fill('#email', testEmail);
    await page.fill('#password', testPassword);
    await page.fill('#confirmPassword', testPassword);
    await page.click('button[type="submit"]');

    await page.waitForURL('**/login**', { timeout: 10000 });
    console.log('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ª–æ–≥–∏–Ω');

    // 2. –í–•–û–î –° –ù–û–í–´–ú–ò –£–ß–ï–¢–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò
    console.log('\nüîê –®–ê–ì 2: –í—Ö–æ–¥ —Å –Ω–æ–≤—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');

    await page.fill('#email', testEmail);
    await page.fill('#password', testPassword);
    await page.click('button[type="submit"]');

    await page.waitForURL(url => !url.toString().includes('/login') && !url.toString().includes('/register'), { timeout: 10000 });
    const afterLoginUrl = page.url();
    console.log('üìç URL –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞:', afterLoginUrl);

    // 3. –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø –ù–ê –ü–õ–ê–¢–§–û–†–ú–£
    console.log('\nüè¢ –®–ê–ì 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É');

    const isOnPlatform = afterLoginUrl.includes('/agents') || afterLoginUrl.includes('/account');
    console.log('–ù–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ:', isOnPlatform);

    if (isOnPlatform) {
      console.log('‚úÖ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ü–û–ü–ê–õ –ù–ê –ü–õ–ê–¢–§–û–†–ú–£!');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–µ–º –≤–∏–¥–µ—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
      const pageTitle = await page.title();
      console.log('–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', pageTitle);

      const agentsVisible = await page.locator('text=–ê–≥–µ–Ω—Ç—ã –ò–ò').isVisible().catch(() => false);
      console.log('–í–∏–¥–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≥–µ–Ω—Ç–æ–≤:', agentsVisible);

    } else {
      console.log('‚ùå –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ù–ï –ü–û–ü–ê–õ –ù–ê –ü–õ–ê–¢–§–û–†–ú–£!');
      console.log('–¢–µ–∫—É—â–∏–π URL:', afterLoginUrl);

      if (afterLoginUrl === baseUrl || afterLoginUrl === `${baseUrl}/`) {
        console.log('‚ö†Ô∏è –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê –ì–õ–ê–í–ù–£–Æ –°–¢–†–ê–ù–ò–¶–£ - –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û!');
      }
    }

    // 4. –¢–ï–°–¢ –î–û–°–¢–£–ü–ê –ö –ó–ê–©–ò–©–ï–ù–ù–´–ú –°–¢–†–ê–ù–ò–¶–ê–ú
    console.log('\nüîí –®–ê–ì 4: –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º');

    await page.goto(`${baseUrl}/account`, { waitUntil: 'domcontentloaded' });
    await page.waitForTimeout(2000);
    const accountUrl = page.url();
    const canAccessAccount = accountUrl.includes('/account');
    console.log('–î–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É:', canAccessAccount);

    await page.goto(`${baseUrl}/agents`, { waitUntil: 'domcontentloaded' });
    await page.waitForTimeout(2000);
    const agentsUrl = page.url();
    const canAccessAgents = agentsUrl.includes('/agents');
    console.log('–î–æ—Å—Ç—É–ø –∫ –∞–≥–µ–Ω—Ç–∞–º:', canAccessAgents);

    // 5. –¢–ï–°–¢ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê
    console.log('\nüëë –®–ê–ì 5: –¢–µ—Å—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');

    await page.goto(`${baseUrl}/login`, { waitUntil: 'domcontentloaded' });
    await page.fill('#email', 'admin@worldwideservice.eu');
    await page.fill('#password', 'l1tmw6u977c9!Q');
    await page.click('button[type="submit"]');

    await page.waitForURL(url => !url.toString().includes('/login'), { timeout: 10000 });
    const adminUrl = page.url();
    const adminSuccess = adminUrl.includes('/agents');
    console.log('–ê–¥–º–∏–Ω –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –∞–≥–µ–Ω—Ç–æ–≤:', adminSuccess);

    // 6. –¢–ï–°–¢ –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–í–¢–û–†–ò–ó–û–í–ê–ù–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –° –ì–õ–ê–í–ù–û–ô
    console.log('\nüîÑ –®–ê–ì 6: –¢–µ—Å—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≥–ª–∞–≤–Ω–æ–π');

    await page.goto(baseUrl, { waitUntil: 'domcontentloaded' });
    await page.waitForTimeout(2000);
    const redirectedFromHomeUrl = page.url();
    const redirectedFromHome = redirectedFromHomeUrl.includes('/agents') || redirectedFromHomeUrl.includes('/account');
    console.log('–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω–æ–π:', redirectedFromHome, redirectedFromHomeUrl);

    // –†–ï–ó–£–õ–¨–¢–ê–¢–´
    console.log('\n' + '='.repeat(60));
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');

    const results = [
      { name: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', success: page.url().includes('/login') },
      { name: '–í—Ö–æ–¥ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', success: isOnPlatform },
      { name: '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É', success: isOnPlatform },
      { name: '–î–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É', success: canAccessAccount },
      { name: '–î–æ—Å—Ç—É–ø –∫ –∞–≥–µ–Ω—Ç–∞–º', success: canAccessAgents },
      { name: '–í—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', success: adminSuccess },
      { name: '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Å –≥–ª–∞–≤–Ω–æ–π', success: redirectedFromHome },
    ];

    results.forEach(result => {
      console.log(`${result.success ? '‚úÖ' : '‚ùå'} ${result.name}`);
    });

    const passed = results.filter(r => r.success).length;
    const total = results.length;
    const percentage = ((passed / total) * 100).toFixed(1);

    console.log(`\nüéØ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢: ${passed}/${total} (${percentage}%)`);

    if (passed === total) {
      console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ü–û–¢–û–ö –†–ê–ë–û–¢–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–û!');
    } else {
      console.log('\n‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´! –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï!');
    }

  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò:', error.message);
  } finally {
    await browser.close();
  }
}

testFullFlow().catch(console.error);
