#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env.local —Ñ–∞–π–ª–∞
function updateEnvFile(accessToken, refreshToken) {
  const envPath = path.join(__dirname, '.env.local');

  try {
    let envContent = '';

    // –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (fs.existsSync(envPath)) {
      envContent = fs.readFileSync(envPath, 'utf8');
    }

    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏
    const lines = envContent.split('\n');

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    let accessTokenUpdated = false;
    let refreshTokenUpdated = false;

    const updatedLines = lines.map(line => {
      if (line.startsWith('KOMMO_TEST_ACCESS_TOKEN=')) {
        accessTokenUpdated = true;
        return `KOMMO_TEST_ACCESS_TOKEN=${accessToken}`;
      }
      if (line.startsWith('KOMMO_TEST_REFRESH_TOKEN=')) {
        refreshTokenUpdated = true;
        return `KOMMO_TEST_REFRESH_TOKEN=${refreshToken}`;
      }
      return line;
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –µ—Å–ª–∏ –∏—Ö –Ω–µ –±—ã–ª–æ
    if (!accessTokenUpdated) {
      updatedLines.push(`KOMMO_TEST_ACCESS_TOKEN=${accessToken}`);
    }
    if (!refreshTokenUpdated && refreshToken) {
      updatedLines.push(`KOMMO_TEST_REFRESH_TOKEN=${refreshToken}`);
    }

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    fs.writeFileSync(envPath, updatedLines.join('\n'), 'utf8');

    console.log('‚úÖ –§–∞–π–ª .env.local —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ.');

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ .env.local:', error.message);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  const accessToken = process.argv[2];
  const refreshToken = process.argv[3] || '';

  if (!accessToken) {
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node auto-update-env.js <ACCESS_TOKEN> [REFRESH_TOKEN]');
    console.log('');
    console.log('–ü—Ä–∏–º–µ—Ä:');
    console.log('node auto-update-env.js eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...');
    process.exit(1);
  }

  console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
  const success = updateEnvFile(accessToken, refreshToken);

  if (success) {
    console.log('');
    console.log('üß™ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:');
    console.log('npx tsx test-kommo.ts');
    console.log('');
    console.log('–ò–ª–∏ –±—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:');
    console.log('node quick-test-tokens.js');
  }
}

if (require.main === module) {
  main();
}

module.exports = { updateEnvFile };
