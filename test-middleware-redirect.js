const { chromium } = require('playwright');

async function testMiddlewareRedirect() {
  console.log('üîÑ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø –ß–ï–†–ï–ó MIDDLEWARE');

  const browser = await chromium.launch({ headless: true });
  const page = await browser.newPage();

  const baseUrl = 'https://gpt-agent-kwid-bxw0a8dht-world-wide-services-62780b79.vercel.app';

  try {
    // 1. –í–•–û–î –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê
    console.log('\nüîê –®–ê–ì 1: –í—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');

    await page.goto(`${baseUrl}/login`, { waitUntil: 'domcontentloaded' });
    await page.fill('#email', 'admin@worldwideservice.eu');
    await page.fill('#password', 'l1tmw6u977c9!Q');
    await page.click('button[type="submit"]');

    console.log('–ñ–¥–µ–º –≤—Ö–æ–¥–∞...');
    await page.waitForTimeout(3000);

    const afterLoginUrl = page.url();
    console.log('URL –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞:', afterLoginUrl);

    // 2. –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ê –ö –ó–ê–©–ò–©–ï–ù–ù–´–ú –°–¢–†–ê–ù–ò–¶–ê–ú
    console.log('\nüîë –®–ê–ì 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º');

    await page.goto(`${baseUrl}/agents`, { waitUntil: 'domcontentloaded' });
    const agentsUrl = page.url();
    console.log('URL /agents:', agentsUrl);

    await page.goto(`${baseUrl}/account`, { waitUntil: 'domcontentloaded' });
    const accountUrl = page.url();
    console.log('URL /account:', accountUrl);

    const hasAccess = agentsUrl.includes('/agents') && accountUrl.includes('/account');
    console.log('–î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ:', hasAccess ? '‚úÖ' : '‚ùå');

    // 3. –¢–ï–°–¢ –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø –° –ü–£–ë–õ–ò–ß–ù–´–• –°–¢–†–ê–ù–ò–¶
    console.log('\nüîÑ –®–ê–ì 3: –¢–µ—Å—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å –ø—É–±–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü');

    // –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.goto(baseUrl, { waitUntil: 'domcontentloaded' });
    await page.waitForTimeout(2000);
    const homeUrl = page.url();
    console.log('–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:', homeUrl);
    const homeRedirected = homeUrl.includes('/agents');
    console.log('–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω–æ–π:', homeRedirected ? '‚úÖ' : '‚ùå');

    // –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞
    await page.goto(`${baseUrl}/login`, { waitUntil: 'domcontentloaded' });
    await page.waitForTimeout(2000);
    const loginUrl = page.url();
    console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞:', loginUrl);
    const loginRedirected = loginUrl.includes('/agents');
    console.log('–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –ª–æ–≥–∏–Ω–∞:', loginRedirected ? '‚úÖ' : '‚ùå');

    // –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    await page.goto(`${baseUrl}/register`, { waitUntil: 'domcontentloaded' });
    await page.waitForTimeout(2000);
    const registerUrl = page.url();
    console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', registerUrl);
    const registerRedirected = registerUrl.includes('/agents');
    console.log('–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', registerRedirected ? '‚úÖ' : '‚ùå');

    // –†–ï–ó–£–õ–¨–¢–ê–¢–´
    console.log('\n' + '='.repeat(50));
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø MIDDLEWARE:');

    console.log(`${hasAccess ? '‚úÖ' : '‚ùå'} –î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ`);
    console.log(`${homeRedirected ? '‚úÖ' : '‚ùå'} –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω–æ–π`);
    console.log(`${loginRedirected ? '‚úÖ' : '‚ùå'} –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –ª–æ–≥–∏–Ω–∞`);
    console.log(`${registerRedirected ? '‚úÖ' : '‚ùå'} –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏`);

    const middlewareWorks = homeRedirected && loginRedirected && registerRedirected;
    console.log(`\nüéØ MIDDLEWARE –†–ê–ë–û–¢–ê–ï–¢: ${middlewareWorks ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);

    if (middlewareWorks) {
      console.log('\nüéâ –í–°–ï –°–í–Ø–ó–ê–ù–û! –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ë–£–î–ï–¢ –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù –ù–ê –ü–õ–ê–¢–§–û–†–ú–£!');
    } else {
      console.log('\n‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê –° –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï–ú!');
    }

  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê:', error.message);
  } finally {
    await browser.close();
  }
}

testMiddlewareRedirect().catch(console.error);
