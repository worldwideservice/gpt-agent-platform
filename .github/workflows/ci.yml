name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # ==========================================
  # JOB 1: Линтинг и проверка кода
  # ==========================================
  lint:
    name: 🔍 Линтинг кода
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📚 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: 📊 TypeScript check
        run: npx tsc --noEmit
        continue-on-error: true

  # ==========================================
  # JOB 2: Тестирование
  # ==========================================
  test:
    name: 🧪 Тестирование
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📚 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: 🔨 Build project
        run: npm run build

      - name: 🧪 Run Playwright tests
        run: npm run test:e2e
        env:
          CI: true

      - name: 📤 Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # ==========================================
  # JOB 3: Сборка
  # ==========================================
  build:
    name: 🔨 Сборка проекта
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📚 Install dependencies
        run: npm ci

      - name: 🔨 Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: .next/
          retention-days: 7

  # ==========================================
  # JOB 4: Деплой на Vercel (только main)
  # ==========================================
  deploy:
    name: 🚀 Деплой на Vercel
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

      - name: ✅ Deployment успешен
        run: echo "🎉 Проект успешно задеплоен на Vercel!"

  # ==========================================
  # JOB 5: Уведомления
  # ==========================================
  notify:
    name: 📢 Уведомления
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    
    steps:
      - name: 📊 Check workflow status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Деплой успешен!"
          else
            echo "❌ Деплой провален!"
          fi

