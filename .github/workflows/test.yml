name: 🧪 Testing Suite

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Запуск тестов каждый день в 03:00 UTC
    - cron: '0 3 * * *'

jobs:
  # ==========================================
  # E2E тесты на разных браузерах
  # ==========================================
  e2e-tests:
    name: 🎭 E2E Tests - ${{ matrix.browser }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📚 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: 🔨 Build project
        run: npm run build

      - name: 🚀 Start server
        run: npm run start &
        env:
          PORT: 3000

      - name: ⏳ Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: 🧪 Run E2E tests
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true

      - name: 📤 Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

      - name: 📸 Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.browser }}
          path: test-results/
          retention-days: 7

  # ==========================================
  # Accessibility тесты
  # ==========================================
  accessibility:
    name: ♿ Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📚 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps chromium

      - name: 🔨 Build project
        run: npm run build

      - name: 🚀 Start server
        run: npm run start &

      - name: ⏳ Wait for server
        run: npx wait-on http://localhost:3000

      - name: ♿ Run accessibility tests
        run: npx playwright test --grep @accessibility
        continue-on-error: true

      - name: 📤 Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: playwright-report/
          retention-days: 30

  # ==========================================
  # Visual Regression тесты
  # ==========================================
  visual-regression:
    name: 📸 Visual Regression Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📚 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps chromium

      - name: 🔨 Build project
        run: npm run build

      - name: 🚀 Start server
        run: npm run start &

      - name: ⏳ Wait for server
        run: npx wait-on http://localhost:3000

      - name: 📸 Run visual regression tests
        run: npx playwright test --grep @visual
        continue-on-error: true

      - name: 📤 Upload visual diffs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-diffs
          path: test-results/
          retention-days: 7

  # ==========================================
  # Сводка тестов
  # ==========================================
  test-summary:
    name: 📊 Test Summary
    runs-on: ubuntu-latest
    needs: [e2e-tests, accessibility, visual-regression]
    if: always()
    
    steps:
      - name: 📊 Generate summary
        run: |
          echo "## 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "### Accessibility: ${{ needs.accessibility.result }}" >> $GITHUB_STEP_SUMMARY
          echo "### Visual Regression: ${{ needs.visual-regression.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.e2e-tests.result }}" == "success" ] && \
             [ "${{ needs.accessibility.result }}" == "success" ] && \
             [ "${{ needs.visual-regression.result }}" == "success" ]; then
            echo "✅ All tests passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some tests failed. Check artifacts for details." >> $GITHUB_STEP_SUMMARY
          fi

