#!/bin/bash

# –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–±–æ—Ä–∫—É, —Ç–∏–ø—ã, –ª–∏–Ω—Ç–µ—Ä –∏ —Å–æ–∑–¥–∞—ë—Ç –æ—Ç—á—ë—Ç

set -e

echo "üß™ –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GPT Agent Platform"
echo "=========================================="
echo ""

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

ERRORS=0
WARNINGS=0

# 1. TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript..."
if npm run type-check > /tmp/typecheck.log 2>&1; then
    echo -e "${GREEN}‚úì${NC} TypeScript: –æ—à–∏–±–æ–∫ –Ω–µ—Ç"
else
    echo -e "${RED}‚úó${NC} TypeScript: –Ω–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏"
    cat /tmp/typecheck.log | tail -10
    ERRORS=$((ERRORS + 1))
fi
echo ""

# 2. ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint..."
if npm run lint > /tmp/lint.log 2>&1; then
    echo -e "${GREEN}‚úì${NC} ESLint: –æ—à–∏–±–æ–∫ –Ω–µ—Ç"
else
    if grep -q "‚úñ" /tmp/lint.log; then
        echo -e "${RED}‚úó${NC} ESLint: –Ω–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏"
        ERRORS=$((ERRORS + 1))
    else
        echo -e "${YELLOW}‚ö†${NC} ESLint: –µ—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
        WARNINGS=$((WARNINGS + 1))
    fi
fi
echo ""

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
echo "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏..."
if DEMO_MODE=true npm run build > /tmp/build.log 2>&1; then
    echo -e "${GREEN}‚úì${NC} –°–±–æ—Ä–∫–∞: —É—Å–ø–µ—à–Ω–∞"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤
    if [ -f ".next/server/pages-manifest.json" ]; then
        echo -e "${GREEN}‚úì${NC} pages-manifest.json —Å–æ–∑–¥–∞–Ω"
        ROUTES=$(cat .next/server/pages-manifest.json | grep -o '"[^"]*"' | wc -l | tr -d ' ')
        echo "   –ù–∞–π–¥–µ–Ω–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤: ${ROUTES}"
    else
        echo -e "${RED}‚úó${NC} pages-manifest.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
        ERRORS=$((ERRORS + 1))
    fi
    
    if [ -f ".next/server/app/page_client-reference-manifest.js" ]; then
        echo -e "${GREEN}‚úì${NC} App Router –º–∞–Ω–∏—Ñ–µ—Å—Ç —Å–æ–∑–¥–∞–Ω"
    else
        echo -e "${YELLOW}‚ö†${NC} App Router –º–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
        WARNINGS=$((WARNINGS + 1))
    fi
else
    echo -e "${RED}‚úó${NC} –°–±–æ—Ä–∫–∞: –æ—à–∏–±–∫–∞"
    tail -20 /tmp/build.log
    ERRORS=$((ERRORS + 1))
fi
echo ""

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
echo "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
MISSING=0

check_dir() {
    if [ -d "$1" ]; then
        echo -e "${GREEN}‚úì${NC} $1"
    else
        echo -e "${RED}‚úó${NC} $1 - –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        MISSING=$((MISSING + 1))
    fi
}

check_dir "app"
check_dir "app/(auth)"
check_dir "app/(protected)"
check_dir "app/api"
check_dir "components"
check_dir "lib/services"
check_dir "lib/repositories"
check_dir "docs"

if [ $MISSING -gt 0 ]; then
    ERRORS=$((ERRORS + MISSING))
fi
echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
DOCS_OK=0

check_doc() {
    if [ -f "$1" ]; then
        echo -e "${GREEN}‚úì${NC} $1"
        DOCS_OK=$((DOCS_OK + 1))
    else
        echo -e "${YELLOW}‚ö†${NC} $1 - –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
}

check_doc "README.md"
check_doc "docs/PLATFORM_OVERVIEW.md"
check_doc "docs/IN_PROGRESS.md"
check_doc "docs/ARCHITECTURE.md"
check_doc "PROJECT_AUDIT.md"
echo ""

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
check_file() {
    if [ -f "$1" ]; then
        echo -e "${GREEN}‚úì${NC} $1"
    else
        echo -e "${RED}‚úó${NC} $1 - –Ω–µ –Ω–∞–π–¥–µ–Ω"
        ERRORS=$((ERRORS + 1))
    fi
}

check_file "next.config.js"
check_file "package.json"
check_file "tsconfig.json"
check_file "tailwind.config.ts"
check_file "auth.ts"
echo ""

# –ò—Ç–æ–≥–∏
echo "=========================================="
if [ $ERRORS -eq 0 ] && [ $WARNINGS -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo ""
    echo "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:"
    echo "  1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: DEMO_MODE=true npm run dev"
    echo "  2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:3000"
    echo "  3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–º–æ-—Ä–µ–∂–∏–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    exit 0
elif [ $ERRORS -eq 0 ]; then
    echo -e "${YELLOW}‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${WARNINGS}${NC}"
    echo -e "${GREEN}‚úì –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ—Ç${NC}"
    echo ""
    echo "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
    exit 0
else
    echo -e "${RED}‚úó –ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: ${ERRORS}${NC}"
    if [ $WARNINGS -gt 0 ]; then
        echo -e "${YELLOW}‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${WARNINGS}${NC}"
    fi
    echo ""
    echo "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º"
    exit 1
fi

