#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ Supabase REST API
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Service Role Key –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è DDL –æ–ø–µ—Ä–∞—Ü–∏–π
 */

const fs = require('fs')
const path = require('path')
require('dotenv').config({ path: path.join(__dirname, '..', '.env.local') })

const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL || process.env.SUPABASE_URL
const SUPABASE_SERVICE_ROLE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!SUPABASE_URL || !SUPABASE_SERVICE_ROLE_KEY) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:')
  console.error('   NEXT_PUBLIC_SUPABASE_URL –∏–ª–∏ SUPABASE_URL')
  console.error('   SUPABASE_SERVICE_ROLE_KEY')
  console.error('\n–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ .env.local —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.')
  process.exit(1)
}

async function executeSQL(sql) {
  try {
    // Supabase REST API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ SQL –Ω–∞–ø—Ä—è–º—É—é
    // –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏–±–æ:
    // 1. Supabase Dashboard (SQL Editor)
    // 2. pgREST —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π SQL (—Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫)
    // 3. Supabase CLI
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ Management API, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    const response = await fetch(`${SUPABASE_URL}/rest/v1/rpc/exec_sql`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'apikey': SUPABASE_SERVICE_ROLE_KEY,
        'Authorization': `Bearer ${SUPABASE_SERVICE_ROLE_KEY}`,
      },
      body: JSON.stringify({ sql }),
    })

    if (response.ok) {
      return await response.json()
    }

    // –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ RPC, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥
    throw new Error(`HTTP ${response.status}: ${response.statusText}`)
  } catch (error) {
    if (error.message.includes('exec_sql')) {
      // RPC —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
      throw new Error('Direct SQL execution —á–µ—Ä–µ–∑ REST API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Supabase Dashboard –∏–ª–∏ psql.')
    }
    throw error
  }
}

async function main() {
  try {
    console.log('üìã –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ Supabase API...\n')
    console.log(`üìç Supabase URL: ${SUPABASE_URL.replace(/\/$/, '')}\n`)

    const sqlFile = path.join(__dirname, 'apply-all-setup.sql')
    
    if (!fs.existsSync(sqlFile)) {
      console.error(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${sqlFile}`)
      process.exit(1)
    }

    const sql = fs.readFileSync(sqlFile, 'utf-8')
    
    console.log('‚ö†Ô∏è  Supabase REST API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä—è–º–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ DDL –æ–ø–µ—Ä–∞—Ü–∏–π.')
    console.log('   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:\n')
    
    console.log('üìù –í–∞—Ä–∏–∞–Ω—Ç 1: Supabase Dashboard (–†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø - 2 –º–∏–Ω—É—Ç—ã)')
    console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://supabase.com/dashboard')
    console.log('   2. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç')
    console.log('   3. SQL Editor ‚Üí New query')
    console.log(`   4. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª: ${sqlFile}`)
    console.log('   5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –í–ï–°–¨ —Ñ–∞–π–ª (Ctrl+A, Ctrl+C)')
    console.log('   6. –í—Å—Ç–∞–≤—å—Ç–µ –≤ SQL Editor (Ctrl+V)')
    console.log('   7. –ù–∞–∂–º–∏—Ç–µ Run\n')
    
    console.log('üìù –í–∞—Ä–∏–∞–Ω—Ç 2: –ß–µ—Ä–µ–∑ Supabase CLI')
    console.log('   1. supabase link --project-ref <project-ref>')
    console.log('   2. supabase db push\n')
    
    console.log('üìù –í–∞—Ä–∏–∞–Ω—Ç 3: –ß–µ—Ä–µ–∑ psql')
    console.log('   psql "<connection-string>" -f ' + sqlFile)
    console.log('   –ü–æ–ª—É—á–∏—Ç–µ connection string –≤ Supabase Dashboard ‚Üí Settings ‚Üí Database\n')

    // –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å —á–µ—Ä–µ–∑ psql –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    if (require('child_process').spawnSync('which', ['psql']).status === 0) {
      console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ psql...\n')
      
      // –ü–æ–ª—É—á–∞–µ–º connection string –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
      // –§–æ—Ä–º–∞—Ç: postgresql://postgres:[PASSWORD]@[HOST]:5432/postgres
      // –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ Supabase Dashboard
      
      const projectRef = SUPABASE_URL.match(/https?:\/\/([^.]+)\.supabase\.co/)?.[1]
      if (projectRef) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω project ref: ${projectRef}`)
        console.log('   –ü–æ–ª—É—á–∏—Ç–µ connection string:')
        console.log('   Supabase Dashboard ‚Üí Settings ‚Üí Database ‚Üí Connection string')
        console.log('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: "postgresql://postgres:[PASSWORD]@db.[PROJECT].supabase.co:5432/postgres"\n')
      }
    }

    process.exit(0)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
    process.exit(1)
  }
}

if (require.main === module) {
  main()
}

