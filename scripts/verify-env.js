#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º: node scripts/verify-env.js
 */

const requiredVars = [
  'NEXTAUTH_SECRET',
  'NEXTAUTH_URL',
  'SUPABASE_URL',
  'SUPABASE_ANON_KEY',
  'SUPABASE_SERVICE_ROLE_KEY',
  'UPSTASH_REDIS_REST_URL',
  'UPSTASH_REDIS_REST_TOKEN',
  'OPENROUTER_API_KEY'
];

const optionalVars = [
  'SENTRY_DSN',
  'NEXT_PUBLIC_SENTRY_DSN',
  'STRIPE_PUBLISHABLE_KEY',
  'STRIPE_SECRET_KEY',
  'SMTP_HOST',
  'SMTP_USER',
  'SMTP_PASS'
];

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...\n');

let allGood = true;
let missingRequired = [];
let missingOptional = [];

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
console.log('üìã –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï:');
requiredVars.forEach(varName => {
  const value = process.env[varName];
  if (!value || value.trim() === '') {
    console.log(`‚ùå ${varName}: –ù–ï –ù–ê–ô–î–ï–ù–ê`);
    missingRequired.push(varName);
    allGood = false;
  } else {
    console.log(`‚úÖ ${varName}: –ù–ê–°–¢–†–û–ï–ù–ê`);
  }
});

console.log('\nüìã –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï:');
optionalVars.forEach(varName => {
  const value = process.env[varName];
  if (!value || value.trim() === '') {
    console.log(`‚ö†Ô∏è  ${varName}: –ù–ï –ù–ê–°–¢–†–û–ï–ù–ê`);
    missingOptional.push(varName);
  } else {
    console.log(`‚úÖ ${varName}: –ù–ê–°–¢–†–û–ï–ù–ê`);
  }
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
console.log('\nüîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò:');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ NEXTAUTH_SECRET
const nextAuthSecret = process.env.NEXTAUTH_SECRET;
if (nextAuthSecret && nextAuthSecret.length < 32) {
  console.log('‚ö†Ô∏è  NEXTAUTH_SECRET: –î–õ–ò–ù–ê –ú–ï–ù–¨–®–ï 32 –°–ò–ú–í–û–õ–û–í (–ù–ï–ë–ï–ó–û–ü–ê–°–ù–û)');
  allGood = false;
} else if (nextAuthSecret) {
  console.log('‚úÖ NEXTAUTH_SECRET: –î–û–°–¢–ê–¢–û–ß–ù–ê–Ø –î–õ–ò–ù–ê');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ SUPABASE_URL
const supabaseUrl = process.env.SUPABASE_URL;
if (supabaseUrl && !supabaseUrl.includes('supabase.co')) {
  console.log('‚ö†Ô∏è  SUPABASE_URL: –ù–ï –ü–û–•–û–ñ –ù–ê –í–ê–õ–ò–î–ù–´–ô SUPABASE URL');
} else if (supabaseUrl) {
  console.log('‚úÖ SUPABASE_URL: –í–ê–õ–ò–î–ù–´–ô SUPABASE URL');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ UPSTASH_REDIS_REST_URL
const redisUrl = process.env.UPSTASH_REDIS_REST_URL;
if (redisUrl && !redisUrl.includes('upstash.io')) {
  console.log('‚ö†Ô∏è  UPSTASH_REDIS_REST_URL: –ù–ï –ü–û–•–û–ñ –ù–ê –í–ê–õ–ò–î–ù–´–ô UPSTASH URL');
} else if (redisUrl) {
  console.log('‚úÖ UPSTASH_REDIS_REST_URL: –í–ê–õ–ò–î–ù–´–ô UPSTASH URL');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ OPENROUTER_API_KEY
const openRouterKey = process.env.OPENROUTER_API_KEY;
if (openRouterKey && !openRouterKey.startsWith('sk-or-v1-')) {
  console.log('‚ö†Ô∏è  OPENROUTER_API_KEY: –ù–ï –ü–û–•–û–ñ –ù–ê –í–ê–õ–ò–î–ù–´–ô OPENROUTER –ö–õ–Æ–ß');
} else if (openRouterKey) {
  console.log('‚úÖ OPENROUTER_API_KEY: –í–ê–õ–ò–î–ù–´–ô OPENROUTER –ö–õ–Æ–ß');
}

console.log('\n' + '='.repeat(50));

// –ò–¢–û–ì–ò
if (allGood && missingRequired.length === 0) {
  console.log('üéâ –í–°–ï –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –ù–ê–°–¢–†–û–ï–ù–´!');
  console.log('üöÄ –ì–û–¢–û–í –ö –î–ï–ü–õ–û–Æ!');
} else {
  console.log('‚ùå –ü–†–û–ë–õ–ï–ú–´ –° –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ï–ô:');
  if (missingRequired.length > 0) {
    console.log(`\n‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï:`);
    missingRequired.forEach(varName => console.log(`   - ${varName}`));
  }
  console.log('\nüîß –ò–°–ü–†–ê–í–¨–¢–ï –ü–†–û–ë–õ–ï–ú–´ –ü–ï–†–ï–î –î–ï–ü–õ–û–ï–ú!');
}

if (missingOptional.length > 0) {
  console.log(`\n‚ö†Ô∏è  –ù–ï –ù–ê–°–¢–†–û–ï–ù–´ –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï (${missingOptional.length}):`);
  missingOptional.forEach(varName => console.log(`   - ${varName}`));
}

console.log('\nüìñ –ü–û–î–†–û–ë–ù–´–ï –ò–ù–°–¢–†–£–ö–¶–ò–ò: –°–ú–û–¢–†–ò–¢–ï DEPLOYMENT.md');
console.log('üîó –ü–†–ò–ú–ï–† –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò: –°–ú–û–¢–†–ò–¢–ï env.example');

process.exit(allGood && missingRequired.length === 0 ? 0 : 1);
