#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ Supabase REST API
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/apply-setup-via-api.js
 */

const fs = require('fs')
const path = require('path')

// –ß–∏—Ç–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config({ path: path.join(__dirname, '../.env.local') })

const SUPABASE_URL = process.env.SUPABASE_URL || process.env.NEXT_PUBLIC_SUPABASE_URL
const SUPABASE_SERVICE_ROLE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!SUPABASE_URL || !SUPABASE_SERVICE_ROLE_KEY) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã SUPABASE_URL –∏–ª–∏ SUPABASE_SERVICE_ROLE_KEY')
  console.error('   –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ .env.local —Å–æ–¥–µ—Ä–∂–∏—Ç —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ')
  process.exit(1)
}

async function executeSQL(sql) {
  const response = await fetch(`${SUPABASE_URL}/rest/v1/rpc/exec_sql`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'apikey': SUPABASE_SERVICE_ROLE_KEY,
      'Authorization': `Bearer ${SUPABASE_SERVICE_ROLE_KEY}`,
    },
    body: JSON.stringify({ query: sql }),
  })

  if (!response.ok) {
    const error = await response.text()
    throw new Error(`SQL Error: ${error}`)
  }

  return await response.json()
}

async function main() {
  try {
    console.log('üìã –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ Supabase API...\n')

    const sqlFile = path.join(__dirname, 'apply-all-setup.sql')
    const sql = fs.readFileSync(sqlFile, 'utf-8')

    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    console.log('‚ö†Ô∏è  –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ PostgreSQL.')
    console.log('   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Supabase Dashboard.\n')
    console.log('üìù –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞:')
    console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://supabase.com/dashboard')
    console.log('   2. SQL Editor ‚Üí New query')
    console.log(`   3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª: ${sqlFile}`)
    console.log('   4. –í—Å—Ç–∞–≤—å—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ\n')

    // –ü–æ–ø—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å —á–µ—Ä–µ–∑ REST API (–º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è DDL)
    console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ API...')
    
    // Supabase –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä—è–º–æ–≥–æ REST endpoint –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ SQL
    // –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏–±–æ Dashboard, –ª–∏–±–æ psql –Ω–∞–ø—Ä—è–º—É—é
    
    console.log('\n‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Supabase Dashboard –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π')
    console.log('   –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ psql:')
    console.log(`   psql "${process.env.SUPABASE_DB_URL}" -f ${sqlFile}`)

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
    process.exit(1)
  }
}

if (require.main === module) {
  main()
}





