#!/bin/bash

# –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê VERCEL ENVIRONMENT VARIABLES
# –ó–∞–ø—É—Å–∫: bash scripts/setup-vercel-env.sh

set -e

echo "üöÄ –ù–ê–°–¢–†–û–ô–ö–ê VERCEL ENVIRONMENT VARIABLES..."
echo "==========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è env.production
if [ ! -f "env.production" ]; then
    echo "‚ùå –§–∞–π–ª env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: npm run setup:production"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Vercel CLI
if ! command -v vercel &> /dev/null; then
    echo "‚ùå Vercel CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm i -g vercel"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Vercel
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Vercel..."
if ! vercel whoami &> /dev/null; then
    echo "‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Vercel CLI!"
    echo "–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å: vercel login"
    exit 1
fi

echo "‚úÖ Vercel CLI –≥–æ—Ç–æ–≤!"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_env_var() {
    local var_name=$1
    local var_value=$2

    if [ -z "$var_value" ]; then
        echo "‚ö†Ô∏è  –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var_name –ø—É—Å—Ç–∞—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."
        return
    fi

    echo "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ $var_name..."

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º printf –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è
    printf "$var_value\n" | vercel env add "$var_name" production --yes 2>/dev/null || {
        echo "‚ö†Ô∏è  –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    }
}

# –ß—Ç–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ env.production –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤ Vercel
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Vercel..."

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
NEXTAUTH_SECRET=$(grep "^NEXTAUTH_SECRET=" env.production | cut -d'=' -f2-)
NEXTAUTH_URL=$(grep "^NEXTAUTH_URL=" env.production | cut -d'=' -f2-)

setup_env_var "NEXTAUTH_SECRET" "$NEXTAUTH_SECRET"
setup_env_var "NEXTAUTH_URL" "$NEXTAUTH_URL"

# Supabase
SUPABASE_URL=$(grep "^SUPABASE_URL=" env.production | cut -d'=' -f2-)
SUPABASE_ANON_KEY=$(grep "^SUPABASE_ANON_KEY=" env.production | cut -d'=' -f2-)
SUPABASE_SERVICE_ROLE_KEY=$(grep "^SUPABASE_SERVICE_ROLE_KEY=" env.production | cut -d'=' -f2-)
SUPABASE_DEFAULT_ORGANIZATION_ID=$(grep "^SUPABASE_DEFAULT_ORGANIZATION_ID=" env.production | cut -d'=' -f2-)

setup_env_var "SUPABASE_URL" "$SUPABASE_URL"
setup_env_var "SUPABASE_ANON_KEY" "$SUPABASE_ANON_KEY"
setup_env_var "SUPABASE_SERVICE_ROLE_KEY" "$SUPABASE_SERVICE_ROLE_KEY"
setup_env_var "SUPABASE_DEFAULT_ORGANIZATION_ID" "$SUPABASE_DEFAULT_ORGANIZATION_ID"

# Client-side Supabase
NEXT_PUBLIC_SUPABASE_URL=$(grep "^NEXT_PUBLIC_SUPABASE_URL=" env.production | cut -d'=' -f2-)
NEXT_PUBLIC_SUPABASE_ANON_KEY=$(grep "^NEXT_PUBLIC_SUPABASE_ANON_KEY=" env.production | cut -d'=' -f2-)

setup_env_var "NEXT_PUBLIC_SUPABASE_URL" "$NEXT_PUBLIC_SUPABASE_URL"
setup_env_var "NEXT_PUBLIC_SUPABASE_ANON_KEY" "$NEXT_PUBLIC_SUPABASE_ANON_KEY"

# Redis
UPSTASH_REDIS_REST_URL=$(grep "^UPSTASH_REDIS_REST_URL=" env.production | cut -d'=' -f2-)
UPSTASH_REDIS_REST_TOKEN=$(grep "^UPSTASH_REDIS_REST_TOKEN=" env.production | cut -d'=' -f2-)

setup_env_var "UPSTASH_REDIS_REST_URL" "$UPSTASH_REDIS_REST_URL"
setup_env_var "UPSTASH_REDIS_REST_TOKEN" "$UPSTASH_REDIS_REST_TOKEN"

# OpenRouter
OPENROUTER_API_KEY=$(grep "^OPENROUTER_API_KEY=" env.production | cut -d'=' -f2-)

setup_env_var "OPENROUTER_API_KEY" "$OPENROUTER_API_KEY"

# –ü—Ä–æ–¥–∞–∫—à–µ–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
NODE_ENV=$(grep "^NODE_ENV=" env.production | cut -d'=' -f2-)
DEMO_MODE=$(grep "^DEMO_MODE=" env.production | cut -d'=' -f2-)
E2E_ONBOARDING_FAKE=$(grep "^E2E_ONBOARDING_FAKE=" env.production | cut -d'=' -f2-)

setup_env_var "NODE_ENV" "$NODE_ENV"
setup_env_var "DEMO_MODE" "$DEMO_MODE"
setup_env_var "E2E_ONBOARDING_FAKE" "$E2E_ONBOARDING_FAKE"

# –ê–¥–º–∏–Ω –¥–æ—Å—Ç—É–ø
ADMIN_USERS=$(grep "^ADMIN_USERS=" env.production | cut -d'=' -f2-)

setup_env_var "ADMIN_USERS" "$ADMIN_USERS"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã
JWT_SECRET=$(grep "^JWT_SECRET=" env.production | cut -d'=' -f2-)
ENCRYPTION_KEY=$(grep "^ENCRYPTION_KEY=" env.production | cut -d'=' -f2-)

setup_env_var "JWT_SECRET" "$JWT_SECRET"
setup_env_var "ENCRYPTION_KEY" "$ENCRYPTION_KEY"

# Backend API
BACKEND_API_URL=$(grep "^BACKEND_API_URL=" env.production | cut -d'=' -f2-)

setup_env_var "BACKEND_API_URL" "$BACKEND_API_URL"

# Kommo integration
KOMMO_OAUTH_REDIRECT_BASE=$(grep "^KOMMO_OAUTH_REDIRECT_BASE=" env.production | cut -d'=' -f2-)
KOMMO_WEBHOOK_SECRET=$(grep "^KOMMO_WEBHOOK_SECRET=" env.production | cut -d'=' -f2-)

setup_env_var "KOMMO_OAUTH_REDIRECT_BASE" "$KOMMO_OAUTH_REDIRECT_BASE"
setup_env_var "KOMMO_WEBHOOK_SECRET" "$KOMMO_WEBHOOK_SECRET"

echo ""
echo "üéâ VERCEL ENVIRONMENT VARIABLES –ù–ê–°–¢–†–û–ï–ù–´!"
echo "=========================================="
echo ""
echo "üìã –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ô–ö–ò:"
echo "vercel env ls"
echo ""
echo "üöÄ –ì–û–¢–û–í –ö –î–ï–ü–õ–û–Æ:"
echo "npm run vercel:deploy"
echo ""
echo "üåê –ü–†–û–î–ê–ö–®–ï–ù URL:"
echo "https://gpt-agent-kwid-1i1j7zlgl-world-wide-services-62780b79.vercel.app"
