#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è GPT Agent Platform —Å Docker
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ GPT Agent Platform..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –∏ docker-compose
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker: https://docs.docker.com/get-docker/"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ docker-compose: https://docs.docker.com/compose/install/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env.local
if [ ! -f .env.local ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω."
    echo "–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è."
    echo ""
    echo "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
    echo "- NEXT_PUBLIC_SUPABASE_URL"
    echo "- NEXT_PUBLIC_SUPABASE_ANON_KEY"
    echo "- SUPABASE_SERVICE_ROLE_KEY"
    echo "- OPENROUTER_API_KEY"
    echo ""
    echo "–î–ª—è –±–∏–ª–ª–∏–Ω–≥–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):"
    echo "- STRIPE_SECRET_KEY"
    echo "- STRIPE_WEBHOOK_SECRET"
    echo ""
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î
if [ ! -f scripts/apply-all-setup.sql ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω: scripts/apply-all-setup.sql"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –≤ Supabase Dashboard."
fi

echo "üì¶ –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã..."
docker-compose build --no-cache

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose up -d

echo "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (30 —Å–µ–∫)..."
sleep 30

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."
if curl -f http://localhost:3000/api/health &>/dev/null; then
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
else
    echo "‚ö†Ô∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –µ—â–µ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "   docker-compose logs app"
fi

if docker-compose ps | grep -q "redis.*Up"; then
    echo "‚úÖ Redis –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚ùå Redis –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
echo "   Frontend: http://localhost:3000"
echo "   API Docs: http://localhost:3000/api-docs"
echo ""
echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo ""
echo "üìã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "   –°—Ç–∞—Ç—É—Å: docker-compose ps"
echo "   Health check: curl http://localhost:3000/api/health"
echo ""
